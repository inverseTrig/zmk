/*
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "breonic";
    compatible = "ent,breonic";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,battery = &vbatt;
    };

    aliases {
        led0 = &green_led;
        led1 = &blue_led;
    };

    leds {
        compatible = "gpio-leds";
        green_led: led0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
            label = "Green LED";
        };
        blue_led: led_1 {
            gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
            label = "Blue LED";
        };
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "BATTERY";
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix_transform";
        columns = <12>;
        rows = <5>;
        map = <
            RC(0, 0) RC(0, 1) RC(0, 2) RC(0, 3) RC(0, 4) RC(0, 5) RC(0, 6) RC(0, 7) RC(0, 8) RC(0, 9) RC(0, 10) RC(0, 11)
            RC(1, 0) RC(1, 1) RC(1, 2) RC(1, 3) RC(1, 4) RC(1, 5) RC(1, 6) RC(1, 7) RC(1, 8) RC(1, 9) RC(1, 10) RC(1, 11)
            RC(2, 0) RC(2, 1) RC(2, 2) RC(2, 3) RC(2, 4) RC(2, 5) RC(2, 6) RC(2, 7) RC(2, 8) RC(2, 9) RC(2, 10) RC(2, 11)
            RC(3, 0) RC(3, 1) RC(3, 2) RC(3, 3) RC(3, 4) RC(3, 5) RC(3, 6) RC(3, 7) RC(3, 8) RC(3, 9) RC(3, 10) RC(3, 11)
            RC(4, 0) RC(4, 1) RC(4, 2) RC(4, 3) RC(4, 4) RC(4, 5) RC(4, 6) RC(4, 7) RC(4, 8) RC(4, 9) RC(4, 10) RC(4, 11)
            RC(5, 0) RC(5, 1) RC(5, 2) RC(5, 3) RC(5, 4) RC(5, 5) RC(5, 6) RC(5, 7) RC(5, 8) RC(5, 9) RC(5, 10) RC(5, 11)
            RC(6, 0) RC(6, 1) RC(6, 2) RC(6, 3) RC(6, 4) RC(6, 5) RC(6, 6) RC(6, 7) RC(6, 8) RC(6, 9) RC(6, 10) RC(6, 11)
            RC(7, 0) RC(7, 1) RC(7, 2) RC(7, 3) RC(7, 4) RC(7, 5) RC(7, 6) RC(7, 7) RC(7, 8) RC(7, 9) RC(7, 10) RC(7, 11)
            RC(8, 0) RC(8, 1) RC(8, 2) RC(8, 3) RC(8, 4) RC(8, 5) RC(8, 6) RC(8, 7) RC(8, 8) RC(8, 9) RC(8, 10) RC(8, 11)
            RC(9, 0) RC(9, 1) RC(9, 2) RC(9, 3) RC(9, 4) RC(9, 5) RC(9, 6) RC(9, 7) RC(9, 8) RC(9, 9) RC(9, 10) RC(9, 11)
            RC(10, 0) RC(10, 1) RC(10, 2) RC(10, 3) RC(10, 4) RC(10, 5) RC(10, 6) RC(10, 7) RC(10, 8) RC(10, 9) RC(10, 10) RC(10, 11)
            RC(11, 0) RC(11, 1) RC(11, 2) RC(11, 3) RC(11, 4) RC(11, 5) RC(11, 6) RC(11, 7) RC(11, 8) RC(11, 9) RC(11, 10) RC(11, 11)
        >;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
            = <&gpio0 17 GPIO_ACTIVE_HIGH>
            , <&gpio0 21 GPIO_ACTIVE_HIGH>
            , <&gpio0 23 GPIO_ACTIVE_HIGH>
            , <&gpio0 6 GPIO_ACTIVE_HIGH>
            , <&gpio0 7 GPIO_ACTIVE_HIGH>
            , <&gpio0 27 GPIO_ACTIVE_HIGH>
            , <&gpio1 15 GPIO_ACTIVE_HIGH>
            , <&gpio1 13 GPIO_ACTIVE_HIGH>
            , <&gpio1 14 GPIO_ACTIVE_HIGH>
            , <&gpio1 10 GPIO_ACTIVE_HIGH>
            , <&gpio1 12 GPIO_ACTIVE_HIGH>
            , <&gpio1 11 GPIO_ACTIVE_HIGH>
            ;
        
        row-gpios
            = <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };
};
